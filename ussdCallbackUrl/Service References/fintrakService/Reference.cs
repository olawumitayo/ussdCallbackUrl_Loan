//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ussdCallbackUrl.fintrakService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChurchMapping", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class ChurchMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string areaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string provinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string regionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area {
            get {
                return this.areaField;
            }
            set {
                if ((object.ReferenceEquals(this.areaField, value) != true)) {
                    this.areaField = value;
                    this.RaisePropertyChanged("area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string national {
            get {
                return this.nationalField;
            }
            set {
                if ((object.ReferenceEquals(this.nationalField, value) != true)) {
                    this.nationalField = value;
                    this.RaisePropertyChanged("national");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parish {
            get {
                return this.parishField;
            }
            set {
                if ((object.ReferenceEquals(this.parishField, value) != true)) {
                    this.parishField = value;
                    this.RaisePropertyChanged("parish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string province {
            get {
                return this.provinceField;
            }
            set {
                if ((object.ReferenceEquals(this.provinceField, value) != true)) {
                    this.provinceField = value;
                    this.RaisePropertyChanged("province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string region {
            get {
                return this.regionField;
            }
            set {
                if ((object.ReferenceEquals(this.regionField, value) != true)) {
                    this.regionField = value;
                    this.RaisePropertyChanged("region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zone {
            get {
                return this.zoneField;
            }
            set {
                if ((object.ReferenceEquals(this.zoneField, value) != true)) {
                    this.zoneField = value;
                    this.RaisePropertyChanged("zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemittanceAccounts", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class RemittanceAccounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remittanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remittanceAccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remittanceAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remittanceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remittancecodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remittance {
            get {
                return this.remittanceField;
            }
            set {
                if ((object.ReferenceEquals(this.remittanceField, value) != true)) {
                    this.remittanceField = value;
                    this.RaisePropertyChanged("remittance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remittanceAccountName {
            get {
                return this.remittanceAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.remittanceAccountNameField, value) != true)) {
                    this.remittanceAccountNameField = value;
                    this.RaisePropertyChanged("remittanceAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remittanceAccountNo {
            get {
                return this.remittanceAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.remittanceAccountNoField, value) != true)) {
                    this.remittanceAccountNoField = value;
                    this.RaisePropertyChanged("remittanceAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remittanceType {
            get {
                return this.remittanceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.remittanceTypeField, value) != true)) {
                    this.remittanceTypeField = value;
                    this.RaisePropertyChanged("remittanceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remittancecode {
            get {
                return this.remittancecodeField;
            }
            set {
                if ((object.ReferenceEquals(this.remittancecodeField, value) != true)) {
                    this.remittancecodeField = value;
                    this.RaisePropertyChanged("remittancecode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostingDTO", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class PostingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrNarrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNarrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MISCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValueDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppID {
            get {
                return this.AppIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDField, value) != true)) {
                    this.AppIDField = value;
                    this.RaisePropertyChanged("AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByField, value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchRef {
            get {
                return this.BatchRefField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchRefField, value) != true)) {
                    this.BatchRefField = value;
                    this.RaisePropertyChanged("BatchRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrCode {
            get {
                return this.BrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrCodeField, value) != true)) {
                    this.BrCodeField = value;
                    this.RaisePropertyChanged("BrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrAccount {
            get {
                return this.CrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CrAccountField, value) != true)) {
                    this.CrAccountField = value;
                    this.RaisePropertyChanged("CrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrNarration {
            get {
                return this.CrNarrationField;
            }
            set {
                if ((object.ReferenceEquals(this.CrNarrationField, value) != true)) {
                    this.CrNarrationField = value;
                    this.RaisePropertyChanged("CrNarration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrAccount {
            get {
                return this.DrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DrAccountField, value) != true)) {
                    this.DrAccountField = value;
                    this.RaisePropertyChanged("DrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrNarration {
            get {
                return this.DrNarrationField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNarrationField, value) != true)) {
                    this.DrNarrationField = value;
                    this.RaisePropertyChanged("DrNarration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MISCode {
            get {
                return this.MISCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MISCodeField, value) != true)) {
                    this.MISCodeField = value;
                    this.RaisePropertyChanged("MISCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostType {
            get {
                return this.PostTypeField;
            }
            set {
                if ((this.PostTypeField.Equals(value) != true)) {
                    this.PostTypeField = value;
                    this.RaisePropertyChanged("PostType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostedBy {
            get {
                return this.PostedByField;
            }
            set {
                if ((object.ReferenceEquals(this.PostedByField, value) != true)) {
                    this.PostedByField = value;
                    this.RaisePropertyChanged("PostedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((this.TransactionTypeField.Equals(value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValueDate {
            get {
                return this.ValueDateField;
            }
            set {
                if ((this.ValueDateField.Equals(value) != true)) {
                    this.ValueDateField = value;
                    this.RaisePropertyChanged("ValueDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChartOfAccountDTO", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class ChartOfAccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountTypeID {
            get {
                return this.AccountTypeIDField;
            }
            set {
                if ((this.AccountTypeIDField.Equals(value) != true)) {
                    this.AccountTypeIDField = value;
                    this.RaisePropertyChanged("AccountTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchCodeField, value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teller", Namespace="http://schemas.datacontract.org/2004/07/FinTrakServiceAPI")]
    [System.SerializableAttribute()]
    public partial class Teller : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string branchcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string staffidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tillledgerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string branchcode {
            get {
                return this.branchcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.branchcodeField, value) != true)) {
                    this.branchcodeField = value;
                    this.RaisePropertyChanged("branchcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string staffid {
            get {
                return this.staffidField;
            }
            set {
                if ((object.ReferenceEquals(this.staffidField, value) != true)) {
                    this.staffidField = value;
                    this.RaisePropertyChanged("staffid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tillledger {
            get {
                return this.tillledgerField;
            }
            set {
                if ((object.ReferenceEquals(this.tillledgerField, value) != true)) {
                    this.tillledgerField = value;
                    this.RaisePropertyChanged("tillledger");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class LoanDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateOfDisburseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisapproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EffectDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstpayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedPrincipalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstalmentLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastInterestPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastprincipalPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaturityAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutstandingPrincipalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicPayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrincipalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrincipalFreqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrincipalFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductAcctNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempCamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pdTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountPaid {
            get {
                return this.AmountPaidField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountPaidField, value) != true)) {
                    this.AmountPaidField = value;
                    this.RaisePropertyChanged("AmountPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedField, value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedAmount {
            get {
                return this.ApprovedAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedAmountField, value) != true)) {
                    this.ApprovedAmountField = value;
                    this.RaisePropertyChanged("ApprovedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryIDField, value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoyCode {
            get {
                return this.CoyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoyCodeField, value) != true)) {
                    this.CoyCodeField = value;
                    this.RaisePropertyChanged("CoyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCode {
            get {
                return this.CustCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCodeField, value) != true)) {
                    this.CustCodeField = value;
                    this.RaisePropertyChanged("CustCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateCreatedField, value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateOfDisburse {
            get {
                return this.DateOfDisburseField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfDisburseField, value) != true)) {
                    this.DateOfDisburseField = value;
                    this.RaisePropertyChanged("DateOfDisburse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Disapprove {
            get {
                return this.DisapproveField;
            }
            set {
                if ((object.ReferenceEquals(this.DisapproveField, value) != true)) {
                    this.DisapproveField = value;
                    this.RaisePropertyChanged("Disapprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EffectDate {
            get {
                return this.EffectDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EffectDateField, value) != true)) {
                    this.EffectDateField = value;
                    this.RaisePropertyChanged("EffectDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstpayDate {
            get {
                return this.FirstpayDateField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstpayDateField, value) != true)) {
                    this.FirstpayDateField = value;
                    this.RaisePropertyChanged("FirstpayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedPrincipal {
            get {
                return this.FixedPrincipalField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedPrincipalField, value) != true)) {
                    this.FixedPrincipalField = value;
                    this.RaisePropertyChanged("FixedPrincipal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreqType {
            get {
                return this.FreqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreqTypeField, value) != true)) {
                    this.FreqTypeField = value;
                    this.RaisePropertyChanged("FreqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Installments {
            get {
                return this.InstallmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallmentsField, value) != true)) {
                    this.InstallmentsField = value;
                    this.RaisePropertyChanged("Installments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstalmentLeft {
            get {
                return this.InstalmentLeftField;
            }
            set {
                if ((object.ReferenceEquals(this.InstalmentLeftField, value) != true)) {
                    this.InstalmentLeftField = value;
                    this.RaisePropertyChanged("InstalmentLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestAmount {
            get {
                return this.InterestAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestAmountField, value) != true)) {
                    this.InterestAmountField = value;
                    this.RaisePropertyChanged("InterestAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastInterestPaid {
            get {
                return this.LastInterestPaidField;
            }
            set {
                if ((object.ReferenceEquals(this.LastInterestPaidField, value) != true)) {
                    this.LastInterestPaidField = value;
                    this.RaisePropertyChanged("LastInterestPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastprincipalPaid {
            get {
                return this.LastprincipalPaidField;
            }
            set {
                if ((object.ReferenceEquals(this.LastprincipalPaidField, value) != true)) {
                    this.LastprincipalPaidField = value;
                    this.RaisePropertyChanged("LastprincipalPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaturityAmount {
            get {
                return this.MaturityAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.MaturityAmountField, value) != true)) {
                    this.MaturityAmountField = value;
                    this.RaisePropertyChanged("MaturityAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutstandingPrincipal {
            get {
                return this.OutstandingPrincipalField;
            }
            set {
                if ((object.ReferenceEquals(this.OutstandingPrincipalField, value) != true)) {
                    this.OutstandingPrincipalField = value;
                    this.RaisePropertyChanged("OutstandingPrincipal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodicPay {
            get {
                return this.PeriodicPayField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicPayField, value) != true)) {
                    this.PeriodicPayField = value;
                    this.RaisePropertyChanged("PeriodicPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Principal {
            get {
                return this.PrincipalField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalField, value) != true)) {
                    this.PrincipalField = value;
                    this.RaisePropertyChanged("Principal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalFreqType {
            get {
                return this.PrincipalFreqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalFreqTypeField, value) != true)) {
                    this.PrincipalFreqTypeField = value;
                    this.RaisePropertyChanged("PrincipalFreqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalFrequency {
            get {
                return this.PrincipalFrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalFrequencyField, value) != true)) {
                    this.PrincipalFrequencyField = value;
                    this.RaisePropertyChanged("PrincipalFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductAcctNo {
            get {
                return this.ProductAcctNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAcctNoField, value) != true)) {
                    this.ProductAcctNoField = value;
                    this.RaisePropertyChanged("ProductAcctNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rate {
            get {
                return this.RateField;
            }
            set {
                if ((object.ReferenceEquals(this.RateField, value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempCam {
            get {
                return this.TempCamField;
            }
            set {
                if ((object.ReferenceEquals(this.TempCamField, value) != true)) {
                    this.TempCamField = value;
                    this.RaisePropertyChanged("TempCam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tenor {
            get {
                return this.TenorField;
            }
            set {
                if ((object.ReferenceEquals(this.TenorField, value) != true)) {
                    this.TenorField = value;
                    this.RaisePropertyChanged("Tenor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminalDate {
            get {
                return this.TerminalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminalDateField, value) != true)) {
                    this.TerminalDateField = value;
                    this.RaisePropertyChanged("TerminalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pdTypeID {
            get {
                return this.pdTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.pdTypeIDField, value) != true)) {
                    this.pdTypeIDField = value;
                    this.RaisePropertyChanged("pdTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccountRequest", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class CreateAccountRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bvnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phonenumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bvn {
            get {
                return this.bvnField;
            }
            set {
                if ((object.ReferenceEquals(this.bvnField, value) != true)) {
                    this.bvnField = value;
                    this.RaisePropertyChanged("bvn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phonenumber {
            get {
                return this.phonenumberField;
            }
            set {
                if ((object.ReferenceEquals(this.phonenumberField, value) != true)) {
                    this.phonenumberField = value;
                    this.RaisePropertyChanged("phonenumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productCode {
            get {
                return this.productCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.productCodeField, value) != true)) {
                    this.productCodeField = value;
                    this.RaisePropertyChanged("productCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccountResponse", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class CreateAccountResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string responseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string responseDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.responseCodeField, value) != true)) {
                    this.responseCodeField = value;
                    this.RaisePropertyChanged("responseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string responseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.responseDescriptionField, value) != true)) {
                    this.responseDescriptionField = value;
                    this.RaisePropertyChanged("responseDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class CustomerDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchCodeField, value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerAccounts", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class CustomerAccounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Display {
            get {
                return this.DisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayField, value) != true)) {
                    this.DisplayField = value;
                    this.RaisePropertyChanged("Display");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductAccountNo {
            get {
                return this.ProductAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAccountNoField, value) != true)) {
                    this.ProductAccountNoField = value;
                    this.RaisePropertyChanged("ProductAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sp_Statement_Result", Namespace="http://schemas.datacontract.org/2004/07/FinTrakDAL", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class sp_Statement_Result : ussdCallbackUrl.fintrakService.ComplexObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AvailableAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AvailableBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCOResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CEmployAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CEmployStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoneByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LedgerBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LedgerBalance1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OpeningBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PendingCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PendingDebitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductAcctNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnclearedBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebbsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string coyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string coyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal endBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> kounterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AvailableAmount {
            get {
                return this.AvailableAmountField;
            }
            set {
                if ((this.AvailableAmountField.Equals(value) != true)) {
                    this.AvailableAmountField = value;
                    this.RaisePropertyChanged("AvailableAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AvailableBalance {
            get {
                return this.AvailableBalanceField;
            }
            set {
                if ((this.AvailableBalanceField.Equals(value) != true)) {
                    this.AvailableBalanceField = value;
                    this.RaisePropertyChanged("AvailableBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrCode {
            get {
                return this.BrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrCodeField, value) != true)) {
                    this.BrCodeField = value;
                    this.RaisePropertyChanged("BrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCOResidence {
            get {
                return this.CCOResidenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CCOResidenceField, value) != true)) {
                    this.CCOResidenceField = value;
                    this.RaisePropertyChanged("CCOResidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEmployAddress {
            get {
                return this.CEmployAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CEmployAddressField, value) != true)) {
                    this.CEmployAddressField = value;
                    this.RaisePropertyChanged("CEmployAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEmployState {
            get {
                return this.CEmployStateField;
            }
            set {
                if ((object.ReferenceEquals(this.CEmployStateField, value) != true)) {
                    this.CEmployStateField = value;
                    this.RaisePropertyChanged("CEmployState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPEmail {
            get {
                return this.CPEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CPEmailField, value) != true)) {
                    this.CPEmailField = value;
                    this.RaisePropertyChanged("CPEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoyCode {
            get {
                return this.CoyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoyCodeField, value) != true)) {
                    this.CoyCodeField = value;
                    this.RaisePropertyChanged("CoyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CreditAmount {
            get {
                return this.CreditAmountField;
            }
            set {
                if ((this.CreditAmountField.Equals(value) != true)) {
                    this.CreditAmountField = value;
                    this.RaisePropertyChanged("CreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCode {
            get {
                return this.CustCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCodeField, value) != true)) {
                    this.CustCodeField = value;
                    this.RaisePropertyChanged("CustCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DebitAmount {
            get {
                return this.DebitAmountField;
            }
            set {
                if ((this.DebitAmountField.Equals(value) != true)) {
                    this.DebitAmountField = value;
                    this.RaisePropertyChanged("DebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoneBy {
            get {
                return this.DoneByField;
            }
            set {
                if ((object.ReferenceEquals(this.DoneByField, value) != true)) {
                    this.DoneByField = value;
                    this.RaisePropertyChanged("DoneBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LedgerBalance {
            get {
                return this.LedgerBalanceField;
            }
            set {
                if ((this.LedgerBalanceField.Equals(value) != true)) {
                    this.LedgerBalanceField = value;
                    this.RaisePropertyChanged("LedgerBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LedgerBalance1 {
            get {
                return this.LedgerBalance1Field;
            }
            set {
                if ((this.LedgerBalance1Field.Equals(value) != true)) {
                    this.LedgerBalance1Field = value;
                    this.RaisePropertyChanged("LedgerBalance1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OpeningBalance {
            get {
                return this.OpeningBalanceField;
            }
            set {
                if ((this.OpeningBalanceField.Equals(value) != true)) {
                    this.OpeningBalanceField = value;
                    this.RaisePropertyChanged("OpeningBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PendingCredit {
            get {
                return this.PendingCreditField;
            }
            set {
                if ((this.PendingCreditField.Equals(value) != true)) {
                    this.PendingCreditField = value;
                    this.RaisePropertyChanged("PendingCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PendingDebit {
            get {
                return this.PendingDebitField;
            }
            set {
                if ((this.PendingDebitField.Equals(value) != true)) {
                    this.PendingDebitField = value;
                    this.RaisePropertyChanged("PendingDebit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PostDate {
            get {
                return this.PostDateField;
            }
            set {
                if ((this.PostDateField.Equals(value) != true)) {
                    this.PostDateField = value;
                    this.RaisePropertyChanged("PostDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductAcctNo {
            get {
                return this.ProductAcctNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAcctNoField, value) != true)) {
                    this.ProductAcctNoField = value;
                    this.RaisePropertyChanged("ProductAcctNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDateField, value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnclearedBalance {
            get {
                return this.UnclearedBalanceField;
            }
            set {
                if ((this.UnclearedBalanceField.Equals(value) != true)) {
                    this.UnclearedBalanceField = value;
                    this.RaisePropertyChanged("UnclearedBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Webbsite {
            get {
                return this.WebbsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebbsiteField, value) != true)) {
                    this.WebbsiteField = value;
                    this.RaisePropertyChanged("Webbsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string coyID {
            get {
                return this.coyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.coyIDField, value) != true)) {
                    this.coyIDField = value;
                    this.RaisePropertyChanged("coyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string coyName {
            get {
                return this.coyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.coyNameField, value) != true)) {
                    this.coyNameField = value;
                    this.RaisePropertyChanged("coyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal endBalance {
            get {
                return this.endBalanceField;
            }
            set {
                if ((this.endBalanceField.Equals(value) != true)) {
                    this.endBalanceField = value;
                    this.RaisePropertyChanged("endBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> kounter {
            get {
                return this.kounterField;
            }
            set {
                if ((this.kounterField.Equals(value) != true)) {
                    this.kounterField = value;
                    this.RaisePropertyChanged("kounter");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ussdCallbackUrl.fintrakService.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ussdCallbackUrl.fintrakService.sp_Statement_Result))]
    public partial class StructuralObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ussdCallbackUrl.fintrakService.sp_Statement_Result))]
    public partial class ComplexObject : ussdCallbackUrl.fintrakService.StructuralObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvestmentDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class InvestmentDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaturityAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaturityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrincipalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateDateField, value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealId {
            get {
                return this.DealIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DealIdField, value) != true)) {
                    this.DealIdField = value;
                    this.RaisePropertyChanged("DealId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountField, value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountedValue {
            get {
                return this.DiscountedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountedValueField, value) != true)) {
                    this.DiscountedValueField = value;
                    this.RaisePropertyChanged("DiscountedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EffectiveDateField, value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestAmount {
            get {
                return this.InterestAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestAmountField, value) != true)) {
                    this.InterestAmountField = value;
                    this.RaisePropertyChanged("InterestAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestRateField, value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaturityAmount {
            get {
                return this.MaturityAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.MaturityAmountField, value) != true)) {
                    this.MaturityAmountField = value;
                    this.RaisePropertyChanged("MaturityAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaturityDate {
            get {
                return this.MaturityDateField;
            }
            set {
                if ((object.ReferenceEquals(this.MaturityDateField, value) != true)) {
                    this.MaturityDateField = value;
                    this.RaisePropertyChanged("MaturityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalAmount {
            get {
                return this.PrincipalAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalAmountField, value) != true)) {
                    this.PrincipalAmountField = value;
                    this.RaisePropertyChanged("PrincipalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCharge {
            get {
                return this.TaxChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxChargeField, value) != true)) {
                    this.TaxChargeField = value;
                    this.RaisePropertyChanged("TaxCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tenor {
            get {
                return this.TenorField;
            }
            set {
                if ((object.ReferenceEquals(this.TenorField, value) != true)) {
                    this.TenorField = value;
                    this.RaisePropertyChanged("Tenor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProductDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class LoanProductDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTypeID {
            get {
                return this.ProductTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeIDField, value) != true)) {
                    this.ProductTypeIDField = value;
                    this.RaisePropertyChanged("ProductTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanScheduleDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class LoanScheduleDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CummulativeInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CummulativePrinRepytField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeChargedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestAccrualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextPayDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoOfDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrincipalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrincipalRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productAcctNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CummulativeInterest {
            get {
                return this.CummulativeInterestField;
            }
            set {
                if ((object.ReferenceEquals(this.CummulativeInterestField, value) != true)) {
                    this.CummulativeInterestField = value;
                    this.RaisePropertyChanged("CummulativeInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CummulativePrinRepyt {
            get {
                return this.CummulativePrinRepytField;
            }
            set {
                if ((object.ReferenceEquals(this.CummulativePrinRepytField, value) != true)) {
                    this.CummulativePrinRepytField = value;
                    this.RaisePropertyChanged("CummulativePrinRepyt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustCode {
            get {
                return this.CustCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustCodeField, value) != true)) {
                    this.CustCodeField = value;
                    this.RaisePropertyChanged("CustCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndBalance {
            get {
                return this.EndBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.EndBalanceField, value) != true)) {
                    this.EndBalanceField = value;
                    this.RaisePropertyChanged("EndBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeCharged {
            get {
                return this.FeeChargedField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeChargedField, value) != true)) {
                    this.FeeChargedField = value;
                    this.RaisePropertyChanged("FeeCharged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestAccrual {
            get {
                return this.InterestAccrualField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestAccrualField, value) != true)) {
                    this.InterestAccrualField = value;
                    this.RaisePropertyChanged("InterestAccrual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestPayment {
            get {
                return this.InterestPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestPaymentField, value) != true)) {
                    this.InterestPaymentField = value;
                    this.RaisePropertyChanged("InterestPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Month {
            get {
                return this.MonthField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthField, value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextPayDay {
            get {
                return this.NextPayDayField;
            }
            set {
                if ((object.ReferenceEquals(this.NextPayDayField, value) != true)) {
                    this.NextPayDayField = value;
                    this.RaisePropertyChanged("NextPayDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoOfDays {
            get {
                return this.NoOfDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.NoOfDaysField, value) != true)) {
                    this.NoOfDaysField = value;
                    this.RaisePropertyChanged("NoOfDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalBalance {
            get {
                return this.PrincipalBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalBalanceField, value) != true)) {
                    this.PrincipalBalanceField = value;
                    this.RaisePropertyChanged("PrincipalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalRepayment {
            get {
                return this.PrincipalRepaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalRepaymentField, value) != true)) {
                    this.PrincipalRepaymentField = value;
                    this.RaisePropertyChanged("PrincipalRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalRepayment {
            get {
                return this.TotalRepaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalRepaymentField, value) != true)) {
                    this.TotalRepaymentField = value;
                    this.RaisePropertyChanged("TotalRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productAcctNo {
            get {
                return this.productAcctNoField;
            }
            set {
                if ((object.ReferenceEquals(this.productAcctNoField, value) != true)) {
                    this.productAcctNoField = value;
                    this.RaisePropertyChanged("productAcctNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleMethodDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class ScheduleMethodDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleMethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleMethod {
            get {
                return this.ScheduleMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleMethodField, value) != true)) {
                    this.ScheduleMethodField = value;
                    this.RaisePropertyChanged("ScheduleMethod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentModeDetails", Namespace="http://schemas.datacontract.org/2004/07/FinTrakLogic.Logic")]
    [System.SerializableAttribute()]
    public partial class PaymentModeDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string payModeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string payMode {
            get {
                return this.payModeField;
            }
            set {
                if ((object.ReferenceEquals(this.payModeField, value) != true)) {
                    this.payModeField = value;
                    this.RaisePropertyChanged("payMode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="fintrakService.IGeneralService")]
    public interface IGeneralService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetChurchMapping", ReplyAction="http://tempuri.org/IGeneralService/GetChurchMappingResponse")]
        ussdCallbackUrl.fintrakService.ChurchMapping GetChurchMapping(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetChurchMapping", ReplyAction="http://tempuri.org/IGeneralService/GetChurchMappingResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.ChurchMapping> GetChurchMappingAsync(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/ListRemittanceAccount", ReplyAction="http://tempuri.org/IGeneralService/ListRemittanceAccountResponse")]
        ussdCallbackUrl.fintrakService.RemittanceAccounts[] ListRemittanceAccount(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/ListRemittanceAccount", ReplyAction="http://tempuri.org/IGeneralService/ListRemittanceAccountResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.RemittanceAccounts[]> ListRemittanceAccountAsync(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/VerifyCustomerAccount", ReplyAction="http://tempuri.org/IGeneralService/VerifyCustomerAccountResponse")]
        string VerifyCustomerAccount(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/VerifyCustomerAccount", ReplyAction="http://tempuri.org/IGeneralService/VerifyCustomerAccountResponse")]
        System.Threading.Tasks.Task<string> VerifyCustomerAccountAsync(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerBalance", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerBalanceResponse")]
        decimal GetCustomerBalance(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerBalance", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerBalanceResponse")]
        System.Threading.Tasks.Task<decimal> GetCustomerBalanceAsync(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/isGLAccountValid", ReplyAction="http://tempuri.org/IGeneralService/isGLAccountValidResponse")]
        bool isGLAccountValid(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/isGLAccountValid", ReplyAction="http://tempuri.org/IGeneralService/isGLAccountValidResponse")]
        System.Threading.Tasks.Task<bool> isGLAccountValidAsync(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/PostTransactions", ReplyAction="http://tempuri.org/IGeneralService/PostTransactionsResponse")]
        string PostTransactions(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/PostTransactions", ReplyAction="http://tempuri.org/IGeneralService/PostTransactionsResponse")]
        System.Threading.Tasks.Task<string> PostTransactionsAsync(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/PostRemittance", ReplyAction="http://tempuri.org/IGeneralService/PostRemittanceResponse")]
        string PostRemittance(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/PostRemittance", ReplyAction="http://tempuri.org/IGeneralService/PostRemittanceResponse")]
        System.Threading.Tasks.Task<string> PostRemittanceAsync(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCompanyName", ReplyAction="http://tempuri.org/IGeneralService/GetCompanyNameResponse")]
        string GetCompanyName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCompanyName", ReplyAction="http://tempuri.org/IGeneralService/GetCompanyNameResponse")]
        System.Threading.Tasks.Task<string> GetCompanyNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/StopCheque", ReplyAction="http://tempuri.org/IGeneralService/StopChequeResponse")]
        string StopCheque(string AccountNumber, string ChequeNo, string Comment, System.DateTime TransactionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/StopCheque", ReplyAction="http://tempuri.org/IGeneralService/StopChequeResponse")]
        System.Threading.Tasks.Task<string> StopChequeAsync(string AccountNumber, string ChequeNo, string Comment, System.DateTime TransactionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/ConfirmCheque", ReplyAction="http://tempuri.org/IGeneralService/ConfirmChequeResponse")]
        string ConfirmCheque(string AccountNumber, string ChequeNo, decimal amount, string BeneficiaryName, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/ConfirmCheque", ReplyAction="http://tempuri.org/IGeneralService/ConfirmChequeResponse")]
        System.Threading.Tasks.Task<string> ConfirmChequeAsync(string AccountNumber, string ChequeNo, decimal amount, string BeneficiaryName, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/ChequeBookRequisition", ReplyAction="http://tempuri.org/IGeneralService/ChequeBookRequisitionResponse")]
        string ChequeBookRequisition();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/ChequeBookRequisition", ReplyAction="http://tempuri.org/IGeneralService/ChequeBookRequisitionResponse")]
        System.Threading.Tasks.Task<string> ChequeBookRequisitionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/isCustomerAccountValid", ReplyAction="http://tempuri.org/IGeneralService/isCustomerAccountValidResponse")]
        bool isCustomerAccountValid(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/isCustomerAccountValid", ReplyAction="http://tempuri.org/IGeneralService/isCustomerAccountValidResponse")]
        System.Threading.Tasks.Task<bool> isCustomerAccountValidAsync(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetChartOfAccount", ReplyAction="http://tempuri.org/IGeneralService/GetChartOfAccountResponse")]
        ussdCallbackUrl.fintrakService.ChartOfAccountDTO[] GetChartOfAccount(string coyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetChartOfAccount", ReplyAction="http://tempuri.org/IGeneralService/GetChartOfAccountResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.ChartOfAccountDTO[]> GetChartOfAccountAsync(string coyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCurrentSystemDate", ReplyAction="http://tempuri.org/IGeneralService/GetCurrentSystemDateResponse")]
        System.DateTime GetCurrentSystemDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCurrentSystemDate", ReplyAction="http://tempuri.org/IGeneralService/GetCurrentSystemDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetCurrentSystemDateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetTellersList", ReplyAction="http://tempuri.org/IGeneralService/GetTellersListResponse")]
        ussdCallbackUrl.fintrakService.Teller[] GetTellersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetTellersList", ReplyAction="http://tempuri.org/IGeneralService/GetTellersListResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.Teller[]> GetTellersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomeCode", ReplyAction="http://tempuri.org/IGeneralService/GetCustomeCodeResponse")]
        string GetCustomeCode(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomeCode", ReplyAction="http://tempuri.org/IGeneralService/GetCustomeCodeResponse")]
        System.Threading.Tasks.Task<string> GetCustomeCodeAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/IsLoanAdded", ReplyAction="http://tempuri.org/IGeneralService/IsLoanAddedResponse")]
        bool IsLoanAdded(ussdCallbackUrl.fintrakService.LoanDetails AddLoan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/IsLoanAdded", ReplyAction="http://tempuri.org/IGeneralService/IsLoanAddedResponse")]
        System.Threading.Tasks.Task<bool> IsLoanAddedAsync(ussdCallbackUrl.fintrakService.LoanDetails AddLoan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/CreateAccountOnline", ReplyAction="http://tempuri.org/IGeneralService/CreateAccountOnlineResponse")]
        ussdCallbackUrl.fintrakService.CreateAccountResponse CreateAccountOnline(ussdCallbackUrl.fintrakService.CreateAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/CreateAccountOnline", ReplyAction="http://tempuri.org/IGeneralService/CreateAccountOnlineResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CreateAccountResponse> CreateAccountOnlineAsync(ussdCallbackUrl.fintrakService.CreateAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerDetails", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerDetailsResponse")]
        ussdCallbackUrl.fintrakService.CustomerDetails GetCustomerDetails(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerDetails", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerDetailsResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CustomerDetails> GetCustomerDetailsAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerDetailsForBeneficiary", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerDetailsForBeneficiaryResponse")]
        ussdCallbackUrl.fintrakService.CustomerDetails GetCustomerDetailsForBeneficiary(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerDetailsForBeneficiary", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerDetailsForBeneficiaryResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CustomerDetails> GetCustomerDetailsForBeneficiaryAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllCustomerAccounts", ReplyAction="http://tempuri.org/IGeneralService/GetAllCustomerAccountsResponse")]
        ussdCallbackUrl.fintrakService.CustomerAccounts[] GetAllCustomerAccounts(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllCustomerAccounts", ReplyAction="http://tempuri.org/IGeneralService/GetAllCustomerAccountsResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CustomerAccounts[]> GetAllCustomerAccountsAsync(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GenerateStatement", ReplyAction="http://tempuri.org/IGeneralService/GenerateStatementResponse")]
        ussdCallbackUrl.fintrakService.sp_Statement_Result[] GenerateStatement(string customerCode, string companyCode, string branchCode, string accountNo, string startDate, string endDate, string accountName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GenerateStatement", ReplyAction="http://tempuri.org/IGeneralService/GenerateStatementResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.sp_Statement_Result[]> GenerateStatementAsync(string customerCode, string companyCode, string branchCode, string accountNo, string startDate, string endDate, string accountName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllDealsPerCustomer", ReplyAction="http://tempuri.org/IGeneralService/GetAllDealsPerCustomerResponse")]
        ussdCallbackUrl.fintrakService.InvestmentDetails[] GetAllDealsPerCustomer(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllDealsPerCustomer", ReplyAction="http://tempuri.org/IGeneralService/GetAllDealsPerCustomerResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.InvestmentDetails[]> GetAllDealsPerCustomerAsync(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetDealInfo", ReplyAction="http://tempuri.org/IGeneralService/GetDealInfoResponse")]
        ussdCallbackUrl.fintrakService.InvestmentDetails GetDealInfo(string dealID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetDealInfo", ReplyAction="http://tempuri.org/IGeneralService/GetDealInfoResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.InvestmentDetails> GetDealInfoAsync(string dealID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllLoanProducts", ReplyAction="http://tempuri.org/IGeneralService/GetAllLoanProductsResponse")]
        ussdCallbackUrl.fintrakService.LoanProductDetails[] GetAllLoanProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllLoanProducts", ReplyAction="http://tempuri.org/IGeneralService/GetAllLoanProductsResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.LoanProductDetails[]> GetAllLoanProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerLoanProducts", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerLoanProductsResponse")]
        ussdCallbackUrl.fintrakService.LoanDetails[] GetCustomerLoanProducts(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetCustomerLoanProducts", ReplyAction="http://tempuri.org/IGeneralService/GetCustomerLoanProductsResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.LoanDetails[]> GetCustomerLoanProductsAsync(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllLoanSchedule", ReplyAction="http://tempuri.org/IGeneralService/GetAllLoanScheduleResponse")]
        ussdCallbackUrl.fintrakService.LoanScheduleDetails[] GetAllLoanSchedule(
                    int Tenor, 
                    decimal interestRate, 
                    float principalBalance, 
                    System.DateTime startdate, 
                    int moratorium, 
                    float numOfInstalment, 
                    string CustCode, 
                    int scheduleMethod, 
                    string CustomerName, 
                    decimal Frequency, 
                    int TenorMode, 
                    bool WithInterest, 
                    string Ref, 
                    System.DateTime FirstPayDate, 
                    decimal Fee, 
                    int freqOfFee, 
                    bool SetEqualDate, 
                    System.DateTime TerminalDate, 
                    decimal PrincipalFrequency, 
                    decimal FixedPrincipal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetAllLoanSchedule", ReplyAction="http://tempuri.org/IGeneralService/GetAllLoanScheduleResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.LoanScheduleDetails[]> GetAllLoanScheduleAsync(
                    int Tenor, 
                    decimal interestRate, 
                    float principalBalance, 
                    System.DateTime startdate, 
                    int moratorium, 
                    float numOfInstalment, 
                    string CustCode, 
                    int scheduleMethod, 
                    string CustomerName, 
                    decimal Frequency, 
                    int TenorMode, 
                    bool WithInterest, 
                    string Ref, 
                    System.DateTime FirstPayDate, 
                    decimal Fee, 
                    int freqOfFee, 
                    bool SetEqualDate, 
                    System.DateTime TerminalDate, 
                    decimal PrincipalFrequency, 
                    decimal FixedPrincipal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetLoanScheduleMethod", ReplyAction="http://tempuri.org/IGeneralService/GetLoanScheduleMethodResponse")]
        ussdCallbackUrl.fintrakService.ScheduleMethodDetails[] GetLoanScheduleMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetLoanScheduleMethod", ReplyAction="http://tempuri.org/IGeneralService/GetLoanScheduleMethodResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.ScheduleMethodDetails[]> GetLoanScheduleMethodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetPaymentModes", ReplyAction="http://tempuri.org/IGeneralService/GetPaymentModesResponse")]
        ussdCallbackUrl.fintrakService.PaymentModeDetails[] GetPaymentModes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/GetPaymentModes", ReplyAction="http://tempuri.org/IGeneralService/GetPaymentModesResponse")]
        System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.PaymentModeDetails[]> GetPaymentModesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AmountFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AmountFreezeResponse")]
        bool NIP_AmountFreeze(string accountNumber, string amount, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AmountFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AmountFreezeResponse")]
        System.Threading.Tasks.Task<bool> NIP_AmountFreezeAsync(string accountNumber, string amount, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AmountUnFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AmountUnFreezeResponse")]
        bool NIP_AmountUnFreeze(string accountNumber, string amount, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AmountUnFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AmountUnFreezeResponse")]
        System.Threading.Tasks.Task<bool> NIP_AmountUnFreezeAsync(string accountNumber, string amount, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AccountFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AccountFreezeResponse")]
        bool NIP_AccountFreeze(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AccountFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AccountFreezeResponse")]
        System.Threading.Tasks.Task<bool> NIP_AccountFreezeAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AccountUnFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AccountUnFreezeResponse")]
        bool NIP_AccountUnFreeze(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_AccountUnFreeze", ReplyAction="http://tempuri.org/IGeneralService/NIP_AccountUnFreezeResponse")]
        System.Threading.Tasks.Task<bool> NIP_AccountUnFreezeAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_MandateAdvice", ReplyAction="http://tempuri.org/IGeneralService/NIP_MandateAdviceResponse")]
        bool NIP_MandateAdvice(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeneralService/NIP_MandateAdvice", ReplyAction="http://tempuri.org/IGeneralService/NIP_MandateAdviceResponse")]
        System.Threading.Tasks.Task<bool> NIP_MandateAdviceAsync(string accountNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeneralServiceChannel : ussdCallbackUrl.fintrakService.IGeneralService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeneralServiceClient : System.ServiceModel.ClientBase<ussdCallbackUrl.fintrakService.IGeneralService>, ussdCallbackUrl.fintrakService.IGeneralService {
        
        public GeneralServiceClient() {
        }
        
        public GeneralServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeneralServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeneralServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeneralServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ussdCallbackUrl.fintrakService.ChurchMapping GetChurchMapping(string customerCode) {
            return base.Channel.GetChurchMapping(customerCode);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.ChurchMapping> GetChurchMappingAsync(string customerCode) {
            return base.Channel.GetChurchMappingAsync(customerCode);
        }
        
        public ussdCallbackUrl.fintrakService.RemittanceAccounts[] ListRemittanceAccount(string customerCode) {
            return base.Channel.ListRemittanceAccount(customerCode);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.RemittanceAccounts[]> ListRemittanceAccountAsync(string customerCode) {
            return base.Channel.ListRemittanceAccountAsync(customerCode);
        }
        
        public string VerifyCustomerAccount(string AccountNumber) {
            return base.Channel.VerifyCustomerAccount(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<string> VerifyCustomerAccountAsync(string AccountNumber) {
            return base.Channel.VerifyCustomerAccountAsync(AccountNumber);
        }
        
        public decimal GetCustomerBalance(string AccountNumber) {
            return base.Channel.GetCustomerBalance(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<decimal> GetCustomerBalanceAsync(string AccountNumber) {
            return base.Channel.GetCustomerBalanceAsync(AccountNumber);
        }
        
        public bool isGLAccountValid(string AccountNumber) {
            return base.Channel.isGLAccountValid(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> isGLAccountValidAsync(string AccountNumber) {
            return base.Channel.isGLAccountValidAsync(AccountNumber);
        }
        
        public string PostTransactions(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject) {
            return base.Channel.PostTransactions(lstPostingObject);
        }
        
        public System.Threading.Tasks.Task<string> PostTransactionsAsync(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject) {
            return base.Channel.PostTransactionsAsync(lstPostingObject);
        }
        
        public string PostRemittance(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject) {
            return base.Channel.PostRemittance(lstPostingObject);
        }
        
        public System.Threading.Tasks.Task<string> PostRemittanceAsync(ussdCallbackUrl.fintrakService.PostingDTO[] lstPostingObject) {
            return base.Channel.PostRemittanceAsync(lstPostingObject);
        }
        
        public string GetCompanyName() {
            return base.Channel.GetCompanyName();
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyNameAsync() {
            return base.Channel.GetCompanyNameAsync();
        }
        
        public string StopCheque(string AccountNumber, string ChequeNo, string Comment, System.DateTime TransactionDate) {
            return base.Channel.StopCheque(AccountNumber, ChequeNo, Comment, TransactionDate);
        }
        
        public System.Threading.Tasks.Task<string> StopChequeAsync(string AccountNumber, string ChequeNo, string Comment, System.DateTime TransactionDate) {
            return base.Channel.StopChequeAsync(AccountNumber, ChequeNo, Comment, TransactionDate);
        }
        
        public string ConfirmCheque(string AccountNumber, string ChequeNo, decimal amount, string BeneficiaryName, string PhoneNumber) {
            return base.Channel.ConfirmCheque(AccountNumber, ChequeNo, amount, BeneficiaryName, PhoneNumber);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmChequeAsync(string AccountNumber, string ChequeNo, decimal amount, string BeneficiaryName, string PhoneNumber) {
            return base.Channel.ConfirmChequeAsync(AccountNumber, ChequeNo, amount, BeneficiaryName, PhoneNumber);
        }
        
        public string ChequeBookRequisition() {
            return base.Channel.ChequeBookRequisition();
        }
        
        public System.Threading.Tasks.Task<string> ChequeBookRequisitionAsync() {
            return base.Channel.ChequeBookRequisitionAsync();
        }
        
        public bool isCustomerAccountValid(string AccountNumber) {
            return base.Channel.isCustomerAccountValid(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> isCustomerAccountValidAsync(string AccountNumber) {
            return base.Channel.isCustomerAccountValidAsync(AccountNumber);
        }
        
        public ussdCallbackUrl.fintrakService.ChartOfAccountDTO[] GetChartOfAccount(string coyCode) {
            return base.Channel.GetChartOfAccount(coyCode);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.ChartOfAccountDTO[]> GetChartOfAccountAsync(string coyCode) {
            return base.Channel.GetChartOfAccountAsync(coyCode);
        }
        
        public System.DateTime GetCurrentSystemDate() {
            return base.Channel.GetCurrentSystemDate();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetCurrentSystemDateAsync() {
            return base.Channel.GetCurrentSystemDateAsync();
        }
        
        public ussdCallbackUrl.fintrakService.Teller[] GetTellersList() {
            return base.Channel.GetTellersList();
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.Teller[]> GetTellersListAsync() {
            return base.Channel.GetTellersListAsync();
        }
        
        public string GetCustomeCode(string accountNumber) {
            return base.Channel.GetCustomeCode(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomeCodeAsync(string accountNumber) {
            return base.Channel.GetCustomeCodeAsync(accountNumber);
        }
        
        public bool IsLoanAdded(ussdCallbackUrl.fintrakService.LoanDetails AddLoan) {
            return base.Channel.IsLoanAdded(AddLoan);
        }
        
        public System.Threading.Tasks.Task<bool> IsLoanAddedAsync(ussdCallbackUrl.fintrakService.LoanDetails AddLoan) {
            return base.Channel.IsLoanAddedAsync(AddLoan);
        }
        
        public ussdCallbackUrl.fintrakService.CreateAccountResponse CreateAccountOnline(ussdCallbackUrl.fintrakService.CreateAccountRequest request) {
            return base.Channel.CreateAccountOnline(request);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CreateAccountResponse> CreateAccountOnlineAsync(ussdCallbackUrl.fintrakService.CreateAccountRequest request) {
            return base.Channel.CreateAccountOnlineAsync(request);
        }
        
        public ussdCallbackUrl.fintrakService.CustomerDetails GetCustomerDetails(string accountNumber) {
            return base.Channel.GetCustomerDetails(accountNumber);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CustomerDetails> GetCustomerDetailsAsync(string accountNumber) {
            return base.Channel.GetCustomerDetailsAsync(accountNumber);
        }
        
        public ussdCallbackUrl.fintrakService.CustomerDetails GetCustomerDetailsForBeneficiary(string accountNumber) {
            return base.Channel.GetCustomerDetailsForBeneficiary(accountNumber);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CustomerDetails> GetCustomerDetailsForBeneficiaryAsync(string accountNumber) {
            return base.Channel.GetCustomerDetailsForBeneficiaryAsync(accountNumber);
        }
        
        public ussdCallbackUrl.fintrakService.CustomerAccounts[] GetAllCustomerAccounts(string customerCode) {
            return base.Channel.GetAllCustomerAccounts(customerCode);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.CustomerAccounts[]> GetAllCustomerAccountsAsync(string customerCode) {
            return base.Channel.GetAllCustomerAccountsAsync(customerCode);
        }
        
        public ussdCallbackUrl.fintrakService.sp_Statement_Result[] GenerateStatement(string customerCode, string companyCode, string branchCode, string accountNo, string startDate, string endDate, string accountName, int skip, int take) {
            return base.Channel.GenerateStatement(customerCode, companyCode, branchCode, accountNo, startDate, endDate, accountName, skip, take);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.sp_Statement_Result[]> GenerateStatementAsync(string customerCode, string companyCode, string branchCode, string accountNo, string startDate, string endDate, string accountName, int skip, int take) {
            return base.Channel.GenerateStatementAsync(customerCode, companyCode, branchCode, accountNo, startDate, endDate, accountName, skip, take);
        }
        
        public ussdCallbackUrl.fintrakService.InvestmentDetails[] GetAllDealsPerCustomer(string AccountNumber) {
            return base.Channel.GetAllDealsPerCustomer(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.InvestmentDetails[]> GetAllDealsPerCustomerAsync(string AccountNumber) {
            return base.Channel.GetAllDealsPerCustomerAsync(AccountNumber);
        }
        
        public ussdCallbackUrl.fintrakService.InvestmentDetails GetDealInfo(string dealID) {
            return base.Channel.GetDealInfo(dealID);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.InvestmentDetails> GetDealInfoAsync(string dealID) {
            return base.Channel.GetDealInfoAsync(dealID);
        }
        
        public ussdCallbackUrl.fintrakService.LoanProductDetails[] GetAllLoanProducts() {
            return base.Channel.GetAllLoanProducts();
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.LoanProductDetails[]> GetAllLoanProductsAsync() {
            return base.Channel.GetAllLoanProductsAsync();
        }
        
        public ussdCallbackUrl.fintrakService.LoanDetails[] GetCustomerLoanProducts(string customerCode) {
            return base.Channel.GetCustomerLoanProducts(customerCode);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.LoanDetails[]> GetCustomerLoanProductsAsync(string customerCode) {
            return base.Channel.GetCustomerLoanProductsAsync(customerCode);
        }
        
        public ussdCallbackUrl.fintrakService.LoanScheduleDetails[] GetAllLoanSchedule(
                    int Tenor, 
                    decimal interestRate, 
                    float principalBalance, 
                    System.DateTime startdate, 
                    int moratorium, 
                    float numOfInstalment, 
                    string CustCode, 
                    int scheduleMethod, 
                    string CustomerName, 
                    decimal Frequency, 
                    int TenorMode, 
                    bool WithInterest, 
                    string Ref, 
                    System.DateTime FirstPayDate, 
                    decimal Fee, 
                    int freqOfFee, 
                    bool SetEqualDate, 
                    System.DateTime TerminalDate, 
                    decimal PrincipalFrequency, 
                    decimal FixedPrincipal) {
            return base.Channel.GetAllLoanSchedule(Tenor, interestRate, principalBalance, startdate, moratorium, numOfInstalment, CustCode, scheduleMethod, CustomerName, Frequency, TenorMode, WithInterest, Ref, FirstPayDate, Fee, freqOfFee, SetEqualDate, TerminalDate, PrincipalFrequency, FixedPrincipal);
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.LoanScheduleDetails[]> GetAllLoanScheduleAsync(
                    int Tenor, 
                    decimal interestRate, 
                    float principalBalance, 
                    System.DateTime startdate, 
                    int moratorium, 
                    float numOfInstalment, 
                    string CustCode, 
                    int scheduleMethod, 
                    string CustomerName, 
                    decimal Frequency, 
                    int TenorMode, 
                    bool WithInterest, 
                    string Ref, 
                    System.DateTime FirstPayDate, 
                    decimal Fee, 
                    int freqOfFee, 
                    bool SetEqualDate, 
                    System.DateTime TerminalDate, 
                    decimal PrincipalFrequency, 
                    decimal FixedPrincipal) {
            return base.Channel.GetAllLoanScheduleAsync(Tenor, interestRate, principalBalance, startdate, moratorium, numOfInstalment, CustCode, scheduleMethod, CustomerName, Frequency, TenorMode, WithInterest, Ref, FirstPayDate, Fee, freqOfFee, SetEqualDate, TerminalDate, PrincipalFrequency, FixedPrincipal);
        }
        
        public ussdCallbackUrl.fintrakService.ScheduleMethodDetails[] GetLoanScheduleMethod() {
            return base.Channel.GetLoanScheduleMethod();
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.ScheduleMethodDetails[]> GetLoanScheduleMethodAsync() {
            return base.Channel.GetLoanScheduleMethodAsync();
        }
        
        public ussdCallbackUrl.fintrakService.PaymentModeDetails[] GetPaymentModes() {
            return base.Channel.GetPaymentModes();
        }
        
        public System.Threading.Tasks.Task<ussdCallbackUrl.fintrakService.PaymentModeDetails[]> GetPaymentModesAsync() {
            return base.Channel.GetPaymentModesAsync();
        }
        
        public bool NIP_AmountFreeze(string accountNumber, string amount, string narration) {
            return base.Channel.NIP_AmountFreeze(accountNumber, amount, narration);
        }
        
        public System.Threading.Tasks.Task<bool> NIP_AmountFreezeAsync(string accountNumber, string amount, string narration) {
            return base.Channel.NIP_AmountFreezeAsync(accountNumber, amount, narration);
        }
        
        public bool NIP_AmountUnFreeze(string accountNumber, string amount, string narration) {
            return base.Channel.NIP_AmountUnFreeze(accountNumber, amount, narration);
        }
        
        public System.Threading.Tasks.Task<bool> NIP_AmountUnFreezeAsync(string accountNumber, string amount, string narration) {
            return base.Channel.NIP_AmountUnFreezeAsync(accountNumber, amount, narration);
        }
        
        public bool NIP_AccountFreeze(string accountNumber) {
            return base.Channel.NIP_AccountFreeze(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> NIP_AccountFreezeAsync(string accountNumber) {
            return base.Channel.NIP_AccountFreezeAsync(accountNumber);
        }
        
        public bool NIP_AccountUnFreeze(string accountNumber) {
            return base.Channel.NIP_AccountUnFreeze(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> NIP_AccountUnFreezeAsync(string accountNumber) {
            return base.Channel.NIP_AccountUnFreezeAsync(accountNumber);
        }
        
        public bool NIP_MandateAdvice(string accountNumber) {
            return base.Channel.NIP_MandateAdvice(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> NIP_MandateAdviceAsync(string accountNumber) {
            return base.Channel.NIP_MandateAdviceAsync(accountNumber);
        }
    }
}
